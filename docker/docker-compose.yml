version: "3.9"

networks:
  #network our docker containers on this server
  mynet:
    driver: bridge

services:
  mynginx:
    container_name: mynginx
    image: nginx:latest
    depends_on:
      - myapi
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # we are still serving from API atm.
      # - ../client/build:/etc/client/build 
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - mynet
    restart: "no"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    environment:
      - SITE_URL=http://43.205.192.54/
    # ignored by docker-compose up only used in swarm
    # deploy:
    #   restart_policy:
    #     condition: on-failure
    #     delay: 5s
    #     max_attempts: 3
    #     window: 120s    

  myapi:
    container_name: node_API
    restart: "no" #just incase
    # image: get from github repository using Personal Access Token 
    # in the local env of the EC2 instance
    build: ../server
    env_file:
      - api.env
    networks:
      - mynet
    volumes:
      - ../client/build:/QURA/client/build
      - ../server/dist:/QURA/server/dist
      - ../server/config:/QURA/server/config #this contains private keys - look into aws keystore
      - ./api.env:/QURA/server/.env
    ports:
      - "3000:3000"

  certbot:
    container_name: ssl_certbot
    image: certbot/certbot:arm64v8-latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'" #renew every 12h
    networks:
      - mynet
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  # local rate limiting
  # myredis:
  #   image: redis:latest
  #   depends_on:
  #     - 
  #   networks:
  #     - mynet
